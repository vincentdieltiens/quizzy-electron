{"version":3,"sources":["electron.js"],"names":["app","BrowserWindow","mainWindow","createWindow","width","height","loadURL","format","pathname","resolve","join","__dirname","protocol","slashes","webContents","openDevTools","on","process","platform","quit"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA,IAAMA,MAAM,mBAASA,GAArB;AACA;AACA,IAAMC,gBAAgB,mBAASA,aAA/B;;AAEA;AACA;AACA,IAAIC,mBAAJ;;AAEA,SAASC,YAAT,GAAyB;AACxB;AACAD,cAAa,IAAID,aAAJ,CAAkB,EAACG,OAAO,IAAR,EAAcC,QAAQ,GAAtB,EAAlB,CAAb;;AAEA;AACAH,YAAWI,OAAX,CAAmB,cAAIC,MAAJ,CAAW;AAC7BC,YAAU,eAAKC,OAAL,CAAa,eAAKC,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAb,CADmB;AAE7BC,YAAU,OAFmB;AAG7BC,WAAS;AAHoB,EAAX,CAAnB;;AAMA;AACAX,YAAWY,WAAX,CAAuBC,YAAvB;;AAEA;AACAb,YAAWc,EAAX,CAAc,QAAd,EAAwB,YAAY;AACnC;AACA;AACA;AACAd,eAAa,IAAb;AACA,EALD;AAMA;;AAED;AACA;AACA;AACAF,IAAIgB,EAAJ,CAAO,OAAP,EAAgBb,YAAhB;;AAEA;AACAH,IAAIgB,EAAJ,CAAO,mBAAP,EAA4B,YAAY;AACvC;AACA;AACA,KAAIC,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AAClClB,MAAImB,IAAJ;AACA;AACD,CAND;;AAQAnB,IAAIgB,EAAJ,CAAO,UAAP,EAAmB,YAAY;AAC9B;AACA;AACA,KAAId,eAAe,IAAnB,EAAyB;AACxBC;AACA;AACD,CAND","file":"electron.js","sourcesContent":["import electron from 'electron';\nimport path from 'path';\nimport url from 'url';\n\n//const electron = require('electron')\n// Module to control application life.\nconst app = electron.app\n// Module to create native browser window.\nconst BrowserWindow = electron.BrowserWindow\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow\n\nfunction createWindow () {\n\t// Create the browser window.\n\tmainWindow = new BrowserWindow({width: 1400, height: 800})\n\n\t// and load the index.html of the app.\n\tmainWindow.loadURL(url.format({\n\t\tpathname: path.resolve(path.join(__dirname, '../index.html')),\n\t\tprotocol: 'file:',\n\t\tslashes: true\n\t}))\n\n\t// Open the DevTools.\n\tmainWindow.webContents.openDevTools()\n\n\t// Emitted when the window is closed.\n\tmainWindow.on('closed', function () {\n\t\t// Dereference the window object, usually you would store windows\n\t\t// in an array if your app supports multi windows, this is the time\n\t\t// when you should delete the corresponding element.\n\t\tmainWindow = null\n\t})\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow)\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n\t// On OS X it is common for applications and their menu bar\n\t// to stay active until the user quits explicitly with Cmd + Q\n\tif (process.platform !== 'darwin') {\n\t\tapp.quit()\n\t}\n})\n\napp.on('activate', function () {\n\t// On OS X it's common to re-create a window in the app when the\n\t// dock icon is clicked and there are no other windows open.\n\tif (mainWindow === null) {\n\t\tcreateWindow()\n\t}\n})"]}